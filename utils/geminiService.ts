import { GoogleGenerativeAI } from "@google/generative-ai";
import {
  FinancialDataService,
  formatCurrency,
  formatPercentage,
} from "./financialData";

// Configura√ß√£o da API do Gemini
const GEMINI_API_KEY = "AIzaSyAkn_iLzm9-vZEsiuo5q0i1RbE3EJHvRbc";
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

export class GeminiService {
  private static instance: GeminiService;
  private model: any;
  private financialService: FinancialDataService;

  constructor() {
    this.model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    this.financialService = FinancialDataService.getInstance();
  }

  static getInstance(): GeminiService {
    if (!GeminiService.instance) {
      GeminiService.instance = new GeminiService();
    }
    return GeminiService.instance;
  }

  // Contexto banc√°rio para o Gemini
  private getBankingContext(): string {
    return `
Voc√™ √© o Miro, assistente virtual do MIROBANK, um banco digital brasileiro.

REGRAS DE CUMPRIMENTOS:
- Voc√™ deve cumprimentar o usu√°rio apenas no PRIMEIRO contato da conversa
- Ap√≥s o cumprimento inicial, responda diretamente √†s perguntas sem repetir sauda√ß√µes como 'Ol√°', 'Oi', 'Bom dia' ou similares
- PRIMEIRA mensagem da conversa: Use cumprimento apropriado (Ol√°, Oi, Bom dia, etc.)
- MENSAGENS SUBSEQUENTES: V√° direto ao ponto, sem sauda√ß√µes repetitivas
- Se o usu√°rio reiniciar explicitamente a conversa ou disser 'oi' novamente ap√≥s longo per√≠odo, voc√™ pode cumprimentar brevemente
- Mantenha um tom cordial e profissional sem soar repetitivo ou robotizado

EXEMPLO CORRETO:
Usu√°rio: 'Ol√°, preciso de ajuda com investimentos'
Bot: 'Ol√°! Como posso ajud√°-lo com investimentos?'
Usu√°rio: 'Qual √© a taxa Selic atual?'
Bot: 'A taxa Selic atual √© de 11,25% ao ano...'
Usu√°rio: 'E o Tesouro Direto?'
Bot: 'O Tesouro Direto oferece t√≠tulos que rendem 100% da Selic...'

PERSONALIDADE:
- Seja emp√°tico, acolhedor e use linguagem simples
- Use emojis para tornar a conversa mais amig√°vel
- Explique conceitos financeiros de forma did√°tica
- Mantenha tom conversacional e pr√≥ximo
- Seja direto e objetivo nas respostas

ESPECIALIDADES:
- Educa√ß√£o financeira brasileira
- Investimentos (Tesouro Direto, CDB, Poupan√ßa, A√ß√µes, FIIs)
- Servi√ßos banc√°rios (PIX, boletos, cart√µes, contas)
- Indicadores econ√¥micos brasileiros (Selic, IPCA, D√≥lar)
- Planejamento financeiro pessoal

DIRETRIZES:
- Use dados reais quando dispon√≠vel
- Seja honesto sobre limita√ß√µes
- Evite termos t√©cnicos complexos
- D√™ exemplos pr√°ticos
- Foque no mercado brasileiro
- Sempre priorize seguran√ßa financeira
- Responda diretamente √† pergunta do usu√°rio
- Seja objetivo e √∫til

IMPORTANTE:
- Nunca invente informa√ß√µes
- Se n√£o souber algo, admita e sugira alternativas
- Mantenha respostas concisas mas completas
- Use formata√ß√£o clara com emojis e bullets
- N√ÉO repita cumprimentos em cada resposta
- Foque na pergunta do usu√°rio e seja direto
`;
  }

  // Fun√ß√£o principal para processar perguntas com Gemini
  async processQuestion(question: string): Promise<string> {
    try {
      // Primeiro, tenta responder com dados locais para perguntas espec√≠ficas
      const localResponse = await this.tryLocalResponse(question);
      if (localResponse) {
        return localResponse;
      }

      // Se n√£o conseguir responder localmente, usa o Gemini
      const context = this.getBankingContext();
      const prompt = `${context}\n\nPergunta do cliente: ${question}\n\nResponda como MiroAI:`;

      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      let text = response.text();

      // P√≥s-processamento para garantir consist√™ncia
      text = this.postProcessResponse(text);

      return text;
    } catch (error) {
      console.error("Erro ao processar pergunta com Gemini:", error);
      return this.getFallbackResponse();
    }
  }

  // Tenta responder com dados locais primeiro (para informa√ß√µes espec√≠ficas)
  private async tryLocalResponse(question: string): Promise<string | null> {
    const lowerQuestion = question.toLowerCase();

    try {
      // Dados econ√¥micos atuais
      if (lowerQuestion.includes("selic") && lowerQuestion.includes("atual")) {
        const economicData =
          await this.financialService.getEconomicIndicators();
        return `A taxa Selic atual √© de ${formatPercentage(
          economicData.selic
        )} ao ano! üìä

Esta √© a taxa b√°sica de juros do Brasil, definida pelo Banco Central. Ela influencia todos os outros investimentos do pa√≠s.

üí° **Por que √© importante para voc√™:**
‚Ä¢ Tesouro Selic rende 100% dessa taxa
‚Ä¢ CDBs geralmente rendem uma porcentagem dela
‚Ä¢ Quanto maior a Selic, melhor para renda fixa

Quer saber mais sobre como aproveitar essa taxa nos seus investimentos?`;
      }

      // IPCA atual
      if (
        lowerQuestion.includes("ipca") ||
        lowerQuestion.includes("infla√ß√£o")
      ) {
        const economicData =
          await this.financialService.getEconomicIndicators();
        return `O IPCA (nossa infla√ß√£o oficial) est√° em ${formatPercentage(
          economicData.ipca
        )} nos √∫ltimos 12 meses! üìà

üí° **O que isso significa:**
√â quanto os pre√ßos subiram no √∫ltimo ano. Para seus investimentos renderem de verdade, eles precisam ganhar mais que isso!

üéØ **Dica importante:** Procure investimentos que rendam acima da infla√ß√£o, como o Tesouro IPCA+ que te protege da alta de pre√ßos.

Quer que eu calcule quanto voc√™ precisa investir para n√£o perder para a infla√ß√£o?`;
      }

      // Cota√ß√£o do d√≥lar
      if (lowerQuestion.includes("d√≥lar")) {
        const economicData =
          await this.financialService.getEconomicIndicators();
        return `O d√≥lar est√° cotado a ${formatCurrency(
          economicData.dolar
        )} hoje! üíµ

üåç **Por que acompanhar o d√≥lar:**
‚Ä¢ Afeta pre√ßos de produtos importados
‚Ä¢ Influencia investimentos internacionais
‚Ä¢ Pode impactar a infla√ß√£o

üí° **Para investidores:** Ter uma pequena parte em d√≥lar pode ser uma boa prote√ß√£o. Fundos cambiais s√£o uma forma simples de fazer isso!

Quer saber mais sobre como se proteger da varia√ß√£o do d√≥lar?`;
      }

      return null; // N√£o conseguiu responder localmente
    } catch (error) {
      return null;
    }
  }

  // P√≥s-processamento para garantir consist√™ncia
  private postProcessResponse(text: string): string {
    // Remove poss√≠veis prefixos indesejados
    text = text.replace(/^(MiroAI:|Assistente:|IA:)/i, "").trim();

    // Garante que n√£o seja muito longo
    if (text.length > 1500) {
      text =
        text.substring(0, 1500) +
        "...\n\nQuer que eu detalhe algum ponto espec√≠fico?";
    }

    // Adiciona quebras de linha para melhor formata√ß√£o
    text = text.replace(/\n\n/g, "\n\n");

    return text;
  }

  // Resposta de fallback em caso de erro
  private getFallbackResponse(): string {
    const fallbacks = [
      `Ops! Tive um probleminha t√©cnico aqui! ü§ñ

Mas n√£o se preocupe, posso te ajudar com:
‚Ä¢ Informa√ß√µes sobre investimentos
‚Ä¢ Dados econ√¥micos atuais
‚Ä¢ Simula√ß√µes de rendimento
‚Ä¢ D√∫vidas sobre PIX, boletos e cart√µes

Que tal tentar fazer sua pergunta novamente?`,

      `Desculpa, algo deu errado por aqui! ‚öôÔ∏è

Enquanto isso, posso te ajudar com:
‚Ä¢ Taxa Selic e infla√ß√£o atuais
‚Ä¢ Como come√ßar a investir
‚Ä¢ Calculadora de investimentos
‚Ä¢ Servi√ßos banc√°rios

Pode repetir sua pergunta? Prometo caprichar na resposta!`,

      `Eita! Deu uma travadinha aqui! üîß

Mas estou funcionando para:
‚Ä¢ Educa√ß√£o financeira
‚Ä¢ Simula√ß√µes de investimento
‚Ä¢ Informa√ß√µes econ√¥micas
‚Ä¢ D√∫vidas banc√°rias

Tenta perguntar de novo? Vou fazer o meu melhor!`,
    ];

    return fallbacks[Math.floor(Math.random() * fallbacks.length)];
  }

  // Fun√ß√£o para calcular simula√ß√µes com contexto do Gemini
  async calculateInvestmentWithAdvice(
    initialAmount: number,
    monthlyAmount: number,
    months: number
  ): Promise<string> {
    try {
      const economicData = await this.financialService.getEconomicIndicators();
      const simulation = this.financialService.calculateInvestmentSimulation(
        initialAmount,
        monthlyAmount,
        economicData.selic,
        months
      );

      const prompt = `
Como MiroAI, analise esta simula√ß√£o de investimento e d√™ conselhos personalizados:

DADOS DA SIMULA√á√ÉO:
- Valor inicial: ${formatCurrency(initialAmount)}
- Aporte mensal: ${formatCurrency(monthlyAmount)}
- Per√≠odo: ${months} meses
- Taxa Selic atual: ${formatPercentage(economicData.selic)}
- Valor final: ${formatCurrency(simulation.finalAmount)}
- Rendimento: ${formatCurrency(simulation.totalReturn)}

D√™ uma resposta completa com:
1. An√°lise dos resultados
2. Recomenda√ß√£o de investimento adequada
3. Dicas personalizadas baseadas no perfil
4. Compara√ß√£o com outras op√ß√µes

Mantenha tom amig√°vel e use emojis.
`;

      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      return response.text();
    } catch (error) {
      // Fallback para c√°lculo simples
      const economicData = await this.financialService.getEconomicIndicators();
      const simulation = this.financialService.calculateInvestmentSimulation(
        initialAmount,
        monthlyAmount,
        economicData.selic,
        months
      );

      return `üìä **Resultado da Sua Simula√ß√£o**

üíµ **Seus valores:**
‚Ä¢ Investimento inicial: ${formatCurrency(initialAmount)}
‚Ä¢ Aporte mensal: ${formatCurrency(monthlyAmount)}
‚Ä¢ Per√≠odo: ${months} meses

üìà **Resultados:**
‚Ä¢ Total investido: ${formatCurrency(simulation.totalInvested)}
‚Ä¢ Valor final: ${formatCurrency(simulation.finalAmount)}
‚Ä¢ Rendimento: ${formatCurrency(simulation.totalReturn)}

üéØ **Recomenda√ß√£o:** Para essa simula√ß√£o, o Tesouro Selic √© uma excelente op√ß√£o!`;
    }
  }
}
